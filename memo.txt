8.14 

django-admin startproject ~~~~로 프로젝트를 만드나 앱을 더 효과적으로 구성하기 위해 다른 방법을 쓴다
django-admin startproject config 사용 
config 폴더명 바꾸고 안에 있는 config 폴더와 manage.py 꺼내고 바꾼 폴더 삭제 

8.15 

linker flake8 사용 
model 변경시 makemigrations 생성 그다음 migrate 
사용할 app 만들기 app은 복수형 django-admin startapp ~~~
app안에 urls.py 만듬 

8.16 

models are the data lookslike
config -> settings.py 
AUTH_USER_MODEL = "users.User"

from django.contrib.auth.models import AbstractUser 추가하고 models.Model 대체
app 추가 DJANGO_APPS + PROJECT_APPS = INSTALLED_APPS
database에 추가하고 2가지 옵션 default 설정 or null=TRUE
Pillow is python library to handle image
django_countries 라이브러리 사용
auto_now_add / auto_now 사용
room model 정의 Foreignkey 를 이용하여 user와 연결

8. 17

verbose_name_plural, verbose_name 사용하여 이름 수정
amenities, facilities, house_rules 는 ManyToManyField로 작성 
ordering을 이용하여 보이는 순서 변경 가능

8. 20 
list_display 를 사용하여 admin 페이지 꾸밈
list_filter 를 이용하여 filter 가능 city 나 country 는 마지막쪽에 배치
host__AAA 와 같이 __를 사용하여 Foreignkey 접근 

8. 21
Django shell을 이용하여 query set(객체의 list)을 통해 DB의 객체들에 접근 가능

related_name
related_name 을 통하여 user(1) 입장에서 room(N)을 찾을수도 있음.
room models에서 related_name 을 적어주면 그 이름을 통하여
user에서 room을 역참조 할 수 있음

2) ManyToMany의 관계에서는 그냥 가져오면 됨
room.amenities.all() 처럼

3) query_set manager
all(), filter(), count() 등 사용


9.1
conversation model 에서 
    def __str__(self):
        usernames = []
        for user in self.participants.all():
            usernames.append(user.username)
        return ",  ".join(usernames)
        # 쿼리셋이 배열을 주는데 __str__은 스트링이 필요하므로 join을 써서 string 을 꺼냄

9.2
config settings.py 에 
MEDIA_ROOT = BASE_DIR / "uploads"  # 이걸 추가해주면 이미지가 여기로 저장됨 uploads!!
이미지 경로 지정

URL_conf 변경
urlpatterns에 새로운 static 경로 등록해줌
static 함수를 보면 (url, 사진저장폴더경로) 로 되어있음
이를 통하여 MEDIA_URL로 접근시 비로소 사진에 접근가능